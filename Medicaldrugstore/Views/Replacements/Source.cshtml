@model IEnumerable<Medicaldrugstore.Models.Replacement>

@{
    ViewBag.Title = rsReplacement.EntryTitle;
}

<div class="clear"></div>
<div class="for-Toolbar">
    @(Html.Kendo().ToolBar()
    .Name("ToolBar")
    .Items(items =>
    {
        items.Add().Type(CommandType.Button).Togglable(false).Text(@Resources.General_NewRecord).Id("btnNewRecord").Click("CreateReplacement");
        items.Add().Type(CommandType.Button).Togglable(false).Text(@Resources.General_Represent).Id("btnRepresent").Click("RepresentReplacement");
        items.Add().Type(CommandType.Button).Togglable(false).Text(@rsReplacement.SupplyStorage).Id("btnSupplyStorage").Click("ProvideReplacement");
        items.Add().Type(CommandType.Button).Togglable(false).Text(@Resources.General_Details).Id("btnDetails").Click("ReplacementDetails");
    })
    )
    @* Search Panel - Right Slide *@
    <div class="right-slidePanel">
        <div class="slidePanel-Content">
            <div class="slidePanel-btn">
            </div>
            <div class="slidePanel-Content-fields create-item">
                <h4>@Resources.General_Search</h4>
                <div class="form-group margin-5-0">
                    @(Html.Kendo().ComboBox()
                      .Name("prmSrcOrg")
                      .DataTextField("Text")
                      .Placeholder(@rsReplacement.SourceOrganizationName)
                      .DataValueField("Value")
                      .Filter(FilterType.StartsWith)
                      .BindTo(ViewBag.vbSourceOrganizations)
                      .HtmlAttributes(new { data_value_primitive = true, @class = "width100" })
                    )
                </div>
                <div class="form-group margin-5-0">
                    @(Html.Kendo().ComboBox()
                          .Name("prmDstOrg")
                          .DataTextField("Text")
                          .Placeholder(@rsReplacement.DestinationOrganizationName)
                          .DataValueField("Value")
                          .Filter(FilterType.StartsWith)
                          .BindTo(ViewBag.vbDestinationOrganizations)
                          .HtmlAttributes(new { data_value_primitive = true, @class = "width100" })
                    )
                </div>
                <div class="form-group margin-5-0">
                    @(Html.Kendo().ComboBox()
                      .Name("prmCnfOrg")
                      .Placeholder(@rsReplacement.ConfirmOrganizationName)
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .Filter(FilterType.StartsWith)
                      .BindTo(ViewBag.vbConfirmOrganizations)
                      .HtmlAttributes(new { data_value_primitive = true, @class = "width100" })
                    )
                </div>
                <div class="form-group margin-5-0">
                    @(Html.Kendo().ComboBox()
                      .Name("prmRplBase")
                      .Placeholder(@rsReplacement.ReplacementBaseName)
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .Filter(FilterType.StartsWith)
                      .BindTo(ViewBag.vbReplacementBases)
                      .HtmlAttributes(new { data_value_primitive = true, @class = "width100" })
                    )
                </div>
                <div class="form-group margin-10-0">
                    <label class="control-label" for="prmInitiationStartDate">@rsReplacement.ReplacementBaseDate</label>
                    <div class="input-search data-period">
                        @(Html.Kendo().DatePicker()
                                    .Name("prmStRplBaseDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_Start, @class = "width100" })
                        )
                        @(Html.Kendo().DatePicker()
                                    .Name("prmTrRplBaseDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_End, @class = "width100" })
                        )
                    </div>
                </div>
                <div class="form-group margin-5-0">
                    @(Html.Kendo().ComboBox()
                      .Name("prmRplStatus")
                      .Placeholder(@rsReplacement.ReplacementStatusName)
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .Filter(FilterType.StartsWith)
                      .BindTo(ViewBag.vbReplacementStatuses)
                      .HtmlAttributes(new { data_value_primitive = true, @class = "width100" })
                    )
                </div>
                <div class="form-group margin-10-0">
                    <label class="control-label" for="prmInitiationStartDate">@rsReplacement.ReplacementDate</label>
                    <div class="input-search data-period">
                        @(Html.Kendo().DatePicker()
                                    .Name("prmStRplDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_Start, @class = "width100" })
                        )
                        @(Html.Kendo().DatePicker()
                                    .Name("prmTrRplDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_End, @class = "width100" })
                        )
                    </div>
                </div>
                <div class="form-group margin-10-0">
                    <label class="control-label" for="prmInitiationStartDate">@rsReplacement.ConfirmDate</label>
                    <div class="input-search data-period">
                        @(Html.Kendo().DatePicker()
                                    .Name("prmStConfirmDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_Start, @class = "width100" })
                        )
                        @(Html.Kendo().DatePicker()
                                    .Name("prmTrConfirmDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_End, @class = "width100" })
                        )
                    </div>
                </div>
                <div class="form-group margin-10-0">
                    <label class="control-label" for="prmInitiationStartDate">@rsReplacement.ReadyDate</label>
                    <div class="input-search data-period">
                        @(Html.Kendo().DatePicker()
                                    .Name("prmStReadyDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_Start, @class = "width100" })
                        )
                        @(Html.Kendo().DatePicker()
                                    .Name("prmTrReadyDate")
                                    .HtmlAttributes(new { placeholder = @Resources.General_End, @class = "width100" })
                        )
                    </div>
                </div>
                <div class="form-group btns align-right">
                    <button type="submit" id="rtSearch" class="k-button" onclick="return Search();"><i class="glyphicon glyphicon-search"></i> @Resources.General_Search</button>
                    <button type="submit" class="k-button" onclick="return Clear();"><i class="glyphicon glyphicon-minus"></i> @Resources.General_Clean</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document)
        .ready(function () {
            currentReplacementIndex = -1;
        });

    function Clear() {
        $("#prmSrcOrg").data("kendoComboBox").select(-1);
        $("#prmDstOrg").data("kendoComboBox").select(-1);
        $("#prmCnfOrg").data("kendoComboBox").select(-1);
        $("#prmRplBase").data("kendoComboBox").select(-1);
        $("#prmStRplBaseDate").val("");
        $("#prmTrRplBaseDate").val("");
        $("#prmRplStatus").data("kendoComboBox").select(-1);
        $("#prmStRplDate").val("");
        $("#prmTrRplDate").val("");
        $("#prmStConfirmDate").val("");
        $("#prmTrConfirmDate").val("");
        $("#prmStReadyDate").val("");
        $("#prmTrReadyDate").val("");

        $("#Replacement").data("kendoGrid").dataSource.read();
        return false;
    }

    function Search() {
        $("#Replacement").data("kendoGrid").dataSource.read();
        return false;
    }

    function getParameter() {
        return {
            srcOrgID: $("#prmSrcOrg").val(),
            dstOrgID: $("#prmDstOrg").val(),
            cnfOrgID: $("#prmCnfOrg").val(),
            rplBaseID: $("#prmRplBase").val(),
            stRplBaseDate: $("#prmStRplBaseDate").val(),
            trRplBaseDate: $("#prmTrRplBaseDate").val(),
            rplStatusID: $("#prmRplStatus").val(),
            stRplDate: $("#prmStRplDate").val(),
            trRplDate: $("#prmTrRplDate").val(),
            stConfirmDate: $("#prmStConfirmDate").val(),
            trConfirmDate: $("#prmTrConfirmDate").val(),
            stReadyDate: $("#prmStReadyDate").val(),
            trReadyDate: $("#prmTrReadyDate").val(),
        };
    }
</script>

@(Html.Kendo().Grid<Medicaldrugstore.Models.ReplacementDetails>()
      .Name("Replacement")
      .Events(events => events.DataBound("onReplacementDataBound").DetailInit("onReplacementDetailInit"))
      .Columns(columns =>
      {
          columns.ForeignKey(p => p.SourceOrganizationId, (List<SelectListItem>) ViewBag.vbOrganizations, "Value", "Text").Width(142);
          columns.ForeignKey(p => p.ConfirmOrganizationId, (List<SelectListItem>) ViewBag.vbOrganizations, "Value", "Text").Width(142);
          columns.ForeignKey(p => p.DestinationOrganizationId, (List<SelectListItem>) ViewBag.vbOrganizations, "Value", "Text").Width(142);
          columns.Bound(model => model.ReplacementId).Hidden();
          columns.ForeignKey(p => p.ReplacementStatusId, (List<SelectListItem>) ViewBag.vbReplacementStatuses, "Value", "Text").Width(140);
          columns.Bound(model => model.ReplacementDate).Width(145);
          columns.Bound(model => model.ConfirmDate).Width(165);
          columns.Bound(model => model.ReadyDate).Width(132);
          columns.Bound(model => model.ProvisionDate).Width(132);
          columns.Bound(model => model.ReceiveDate).Width(145);
          columns.Command(commands =>
          {
              commands.Custom("Update").Text(" ").Click("UpdateReplacement");
              commands.Custom("Delete").Text(" ").Click("DeleteReplacement");
          }).Title(Resources.General_Commands).Width(130);
      })
      .Editable(editable =>
      {
          editable.DisplayDeleteConfirmation(Resources.General_Delete_Record);
      })
      .Selectable(s => s.Mode(Kendo.Mvc.UI.GridSelectionMode.Single))
      .Pageable()
      .ClientDetailTemplateId("replacementProductTemplate")
      .Scrollable()
      .Sortable()
      .Resizable(resize => resize.Columns(true))
      .Reorderable(reorder => reorder.Columns(true))
      .DataSource(dataSource => dataSource
          .Ajax()
          .Read(read => read.Action("ReadSourceReplacements", "Replacements").Data("getParameter"))
          .Sort(sort => sort.Add("ReplacementId").Descending())
          .PageSize(15)
          .Model(model =>
          {
              model.Id(p => p.ReplacementId);
          }
          )
)
)

@(Html.Kendo().Window().Name("wndReplacement")
                .Width(650).Height(300)
                .Draggable().Resizable()
                .Content("").Modal(true)
                .Actions(actions => actions.Pin().Close())
                .Visible(false)
                .Events(events => events
                .Close("onReplacementClose").Open("onReplacementOpen").Refresh("onReplacementRefresh"))
)

@(Html.Kendo().Window().Name("wndProvideReplacement")
                .Width(400).Height(200)
                .Draggable().Resizable()
                .Content("").Modal(true)
                .Actions(actions => actions.Pin().Close())
                .Visible(false)
                .Events(events => events
                .Close("onReplacementClose").Open("onReplacementClose").Refresh("onReplacementClose"))
)

@(Html.Kendo().Window().Name("wndRepresentReplacement")
                .Width(400).Height(200)
                .Draggable().Resizable()
                .Content("").Modal(true)
                .Actions(actions => actions.Pin().Close())
                .Visible(false)
                .Events(events => events
                .Close("onReplacementClose").Open("onReplacementClose").Refresh("onReplacementClose"))
)

@(Html.Kendo().Window().Name("wndReplacementDetails")
                .Width(600).Height(520)
                .Draggable().Resizable()
                .Content("").Modal(true)
                .Actions(actions => actions.Pin().Close())
                .Visible(false)
                .Events(events => events
                .Open("onReplacementClose").Refresh("onReplacementClose"))
)

<script>
    function onReplacementDataBound(e) {
        $(".k-grid-Update, .Update_Icon").find("span").addClass("glyphicon glyphicon-pencil");
        $(".k-grid-Delete, .Delete_Icon").find("span").addClass("glyphicon glyphicon-trash");
        if (currentReplacementIndex != -1) {
            var row = $(this.tbody).find("tr.k-master-row:eq(" + currentReplacementIndex + ")");
            this.expandRow(row);
        }
    }

    function onReplacementDetailInit(e) {
        currentReplacementIndex = $(e.masterRow).index(".k-master-row");
        var selectedItem = this.dataItem(e.masterRow);
        RPID = selectedItem.ReplacementId;
    }

    function CreateReplacement() {
        var window = $("#wndReplacement").data("kendoWindow");
        window.content("");
        window.title("@Resources.General_NewRecord");

        window.refresh({
            url: "@Url.Action("ReplacementTemplate", "Replacements")" + "/" + 0
        });
        window.center();
        window.open();
        return false;
    }

    function UpdateReplacement(e) {
        var window = $("#wndReplacement").data("kendoWindow");
        var row = $(e.target).closest("tr");
        var grid = $("#Replacement").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        window.content("");
        window.title("@Resources.General_Edit");
        window.refresh({
            url: "@Url.Action("ReplacementTemplate", "Replacements")" + "/" + dataItem.ReplacementId
        });
        window.center();
        window.open();
        return false;
    }

    function DeleteReplacement(e) {
        var row = $(e.target).closest("tr");
        var grid = $("#Replacement").data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var r = confirm("@Resources.General_Delete_Question");
        if (r == false) {
            return false;
        }
        var rt = false;
        var dt;
        var q = $.ajax({
            url: '@Url.Action("DeleteReplacement", "Replacements")',
            dataType: "json",
            type: "GET",
            data: {
                id: dataItem.ReplacementId
            },
            async: false,
            success: function (data) {
                dt = data;
                rt = true;
            },
            error: function (xhr) {
                dt = xhr;
                rt = false;
            }
        });
        if (rt == true) {
            $("#Replacement").data("kendoGrid").dataSource.read();
            $("#Replacement").data("kendoGrid").refresh();
        } else {
            alert(dt);
            return false;
        }
        return false;
    }

    function RepresentReplacement() {
        var grid = $("#Replacement").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem == null) {
            alert("@Resources.General_NotSelected");
            return false;
        }
        if (selectedItem.ReplacementStatusId != null) {
            alert("@Resources.General_ReplacementRepresentation");
            return false;
        }
        var window = $("#wndRepresentReplacement").data("kendoWindow");
        window.content("");
        window.title("@Resources.General_Represent");
        window.refresh({
            url: "@Url.Action("RepresentReplacement", "Replacements")" + "/" + selectedItem.ReplacementId
        });
        window.center();
        window.open();
        return false;
    }

    function ProvideReplacement() {
        var grid = $("#Replacement").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem == null) {
            alert("@Resources.General_NotSelected");
            return false;
        }
        if (selectedItem.ReplacementStatusId != 3) {
            alert("«Տարամադրել պահեստից» կարելի է այն գրառումը, որն ունի «Առաքման պատրաստ» կարգավիճակ:");
            return false;
        }
        var window = $("#wndProvideReplacement").data("kendoWindow");
        window.content("");
        window.title("@Resources.General_Supply");
        window.refresh({
            url: "@Url.Action("ProvideReplacement", "Replacements")" + "/" + selectedItem.ReplacementId
        });
        window.center();
        window.open();
        return false;
    }

    function ReplacementDetails() {
        var window = $("#wndReplacementDetails").data("kendoWindow");
        var grid = $("#Replacement").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem == null) {
            alert("@Resources.General_NotSelected");
            return false;
        }
        window.content("");
        window.title("@rsReplacement.DetailsTitle");
        window.refresh({
            url: "@Url.Action("ReplacementDetails", "Replacements")" + "/" + selectedItem.ReplacementId
        });
        window.center();
        window.open();
        return false;
    }

    function onReplacementOpen(e) {
        kendo.ui.progress(e.sender.element, true);
    }

    function onReplacementClose(e) {
        $("#Replacement").data("kendoGrid").dataSource.read();
        $("#Replacement").data("kendoGrid").refresh();
    }

    function onReplacementRefresh(e) {
        kendo.ui.progress(e.sender.element, false);
    }


</script>

<script id="replacementProductTemplate" type="text/kendo-tmpl">

    @(Html.Kendo().Grid<Medicaldrugstore.Models.ReplacementProduct>()
              .Name("ReplacementProduct_#=ReplacementId#")
              .Columns(columns =>
              {
                  columns.Bound(p => p.ReplacementProductId).Hidden();
                  columns.Bound(o => o.ReplacementId).Hidden();
                  columns.ForeignKey(o => o.ProductId, (List<SelectListItem>) ViewBag.vbProducts, "Value", "Text");
                  columns.Bound(o => o.Quantity);
                  columns.Bound(o => o.ItemQuantity);
                  columns.Bound(o => o.UnitCost);
                  columns.Bound(o => o.TotalCost);
                  columns.Command(commands =>
                  {
                      commands.Custom("UpdateReplacementProduct_#=ReplacementId#").Text(" ").Click("UpdateReplacementProduct").HtmlAttributes(new { @class = "Update_Icon" });
                      commands.Custom("DeleteReplacementProduct_#=ReplacementId#").Text(" ").Click("DeleteReplacementProduct").HtmlAttributes(new { @class = "Delete_Icon" });
                  }).Title(Resources.General_Commands).Width(130);
              })
              .ToolBar(toolbar =>
              {
                  toolbar.Custom().Name("CreateReplacementProduct_#=ReplacementId#").Text(rsReplacement.Product).HtmlAttributes(new { onclick = "return CreateReplacementProduct();" });
              })
              .Editable(editable =>
              {
                  editable.DisplayDeleteConfirmation(Resources.General_Delete_Record);
              })
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(5)
                  .Read(read => read.Action("ReadReplacementProducts", "Replacements", new { id = "#=ReplacementId#" }))
                  .Events(events =>
                  {
                      events.Sync("onReplacementProductSync");
                  })
                  .Model(model =>
                  {
                      model.Id(p => p.ReplacementProductId);
                  }
                  )
              )
              .Scrollable()
              .Pageable()
              .Events(e => e.DataBound("onRowBound"))
              .Sortable()
              .ToClientTemplate()
    )

</script>

@(Html.Kendo().Window().Name("wndReplacementProduct")
                .Width(600).Height(150)
                .Draggable().Resizable()
                .Content("").Modal(true)
                .Actions(actions => actions.Pin().Close())
                .Visible(false)
                .Events(events => events
                .Close("onReplacementProductClose").Open("onReplacementProductOpen").Refresh("onReplacementProductRefresh"))
)

<script>

    function onReplacementProductSync(e) {
        $("#Replacement").data("kendoGrid").dataSource.read();
        $("#Replacement").data("kendoGrid").refresh();
    }

    function CreateReplacementProduct() {
        var window = $("#wndReplacementProduct").data("kendoWindow");
        window.content("");
        window.title("@rsReplacement.ProductEntry");
        window.refresh({
            url: '@Url.Action("ReplacementProductTemplate", "Replacements")?replacementProductId=' + 0 + '&replacementId=' + RPID
        });
        window.center();
        window.open();
        return false;
    }

    function UpdateReplacementProduct(e) {
        var row = $(e.target).closest("tr");
        var gridName = "#ReplacementProduct_" + RPID;
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var window = $("#wndReplacementProduct").data("kendoWindow");
        window.title("@Resources.General_Edit");
        window.refresh({
            url: '@Url.Action("ReplacementProductTemplate", "Replacements")?replacementProductId=' + dataItem.ReplacementProductId + '&replacementId=' + RPID
        });
        window.center();
        window.open();
        return false;
    }

    function DeleteReplacementProduct(e) {
        var row = $(e.target).closest("tr");
        var gridName = "#ReplacementProduct_" + RPID;
        var grid = $(gridName).data("kendoGrid");
        var dataItem = grid.dataItem(row);
        var r = confirm("@Resources.General_Delete_Question");
        if (r == false) {
            return false;
        }
        var rt = false;
        var dt;
        var q = $.ajax({
            url: '@Url.Action("DeleteReplacementProduct", "Replacements")',
            dataType: "json",
            type: "GET",
            data: {
                id: dataItem.ReplacementProductId
            },
            async: false,
            success: function (data) {
                dt = data;
                rt = true;
            },
            error: function (xhr) {
                dt = xhr;
                rt = false;
            }
        });
        if (rt == true) {
            $(gridName).data("kendoGrid").dataSource.read();
            $(gridName).data("kendoGrid").refresh();
        } else {
            alert(dt);
            return false;
        }
        return false;
    }

    function onReplacementProductOpen(e) {
        kendo.ui.progress(e.sender.element, true);
    }

    function onReplacementProductClose(e) {
        $("#Replacement").data("kendoGrid").dataSource.read();
        $("#Replacement").data("kendoGrid").refresh();
    }

    function onReplacementProductRefresh(e) {
        kendo.ui.progress(e.sender.element, false);
    }

</script>
